<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.AdvancedAgeApplyMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.AdvancedAgeApply" >
    <id column="seq" property="seq" jdbcType="VARCHAR" />
    <id column="apply_year" property="applyYear" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="guarantee_number" property="guaranteeNumber" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="VARCHAR" />
    <result column="register_postal_code" property="registerPostalCode" jdbcType="VARCHAR" />
    <result column="register_city" property="registerCity" jdbcType="VARCHAR" />
    <result column="register_area" property="registerArea" jdbcType="VARCHAR" />
    <result column="register_address" property="registerAddress" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_jobtitle" property="contactJobtitle" jdbcType="VARCHAR" />
    <result column="contact_work_phone_area_code" property="contactWorkPhoneAreaCode" jdbcType="VARCHAR" />
    <result column="contact_work_phone" property="contactWorkPhone" jdbcType="VARCHAR" />
    <result column="contact_work_phone_extension" property="contactWorkPhoneExtension" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="fax_area_code" property="faxAreaCode" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="contact_city" property="contactCity" jdbcType="VARCHAR" />
    <result column="contact_area" property="contactArea" jdbcType="VARCHAR" />
    <result column="contact_address" property="contactAddress" jdbcType="VARCHAR" />
    <result column="multiple_company" property="multipleCompany" jdbcType="CHAR" />
    <result column="workers_employment" property="workersEmployment" jdbcType="CHAR" />
    <result column="relatives" property="relatives" jdbcType="CHAR" />
    <result column="related_amounts" property="relatedAmounts" jdbcType="CHAR" />
    <result column="not_mandatory" property="notMandatory" jdbcType="CHAR" />
    <result column="industry" property="industry" jdbcType="CHAR" />
    <result column="attach_documents_apply" property="attachDocumentsApply" jdbcType="CHAR" />
    <result column="attach_documents_plan" property="attachDocumentsPlan" jdbcType="CHAR" />
    <result column="attach_documents_register_proof" property="attachDocumentsRegisterProof" jdbcType="CHAR" />
    <result column="attach_documents_insure_proof" property="attachDocumentsInsureProof" jdbcType="CHAR" />
    <result column="old_employment_percentage" property="oldEmploymentPercentage" jdbcType="CHAR" />
    <result column="old_employment_number" property="oldEmploymentNumber" jdbcType="INTEGER" />
    <result column="continus_old_employment_number" property="continusOldEmploymentNumber" jdbcType="INTEGER" />
    <result column="continus_old_employment_percentage" property="continusOldEmploymentPercentage" jdbcType="DOUBLE" />
    <result column="attach_documents_salary_proof" property="attachDocumentsSalaryProof" jdbcType="CHAR" />
    <result column="attach_documents_other_proof" property="attachDocumentsOtherProof" jdbcType="CHAR" />
    <result column="attach_documents_other_proof_document" property="attachDocumentsOtherProofDocument" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="accept_unit" property="acceptUnit" jdbcType="VARCHAR" />
    <result column="accept_time" property="acceptTime" jdbcType="TIMESTAMP" />
    <result column="verify_person" property="verifyPerson" jdbcType="VARCHAR" />
    <result column="business_manager" property="businessManager" jdbcType="VARCHAR" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    seq, apply_year, id, company_name, guarantee_number, principal, register_postal_code, 
    register_city, register_area, register_address, contact_name, contact_jobtitle, contact_work_phone_area_code, 
    contact_work_phone, contact_work_phone_extension, contact_phone, fax_area_code, fax, 
    email, contact_city, contact_area, contact_address, multiple_company, workers_employment, 
    relatives, related_amounts, not_mandatory, industry, attach_documents_apply, attach_documents_plan, 
    attach_documents_register_proof, attach_documents_insure_proof, old_employment_percentage, 
    old_employment_number, continus_old_employment_number, continus_old_employment_percentage, 
    attach_documents_salary_proof, attach_documents_other_proof, attach_documents_other_proof_document, 
    create_time, accept_unit, accept_time, verify_person, business_manager, updator, 
    update_time, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.AdvancedAgeApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advancedAgeApply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.AdvancedAgeApplyKey" >
    select 
    <include refid="Base_Column_List" />
    from advancedAgeApply
    where seq = #{seq,jdbcType=VARCHAR}
      and apply_year = #{applyYear,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.springboot.entity.AdvancedAgeApplyKey" >
    delete from advancedAgeApply
    where seq = #{seq,jdbcType=VARCHAR}
      and apply_year = #{applyYear,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.AdvancedAgeApplyExample" >
    delete from advancedAgeApply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.AdvancedAgeApply" >
    insert into advancedAgeApply (seq, apply_year, id, 
      company_name, guarantee_number, principal, 
      register_postal_code, register_city, register_area, 
      register_address, contact_name, contact_jobtitle, 
      contact_work_phone_area_code, contact_work_phone, 
      contact_work_phone_extension, contact_phone, 
      fax_area_code, fax, email, 
      contact_city, contact_area, contact_address, 
      multiple_company, workers_employment, relatives, 
      related_amounts, not_mandatory, industry, 
      attach_documents_apply, attach_documents_plan, attach_documents_register_proof, 
      attach_documents_insure_proof, old_employment_percentage, 
      old_employment_number, continus_old_employment_number, 
      continus_old_employment_percentage, attach_documents_salary_proof, 
      attach_documents_other_proof, attach_documents_other_proof_document, 
      create_time, accept_unit, accept_time, 
      verify_person, business_manager, updator, 
      update_time, remark)
    values (#{seq,jdbcType=VARCHAR}, #{applyYear,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, 
      #{companyName,jdbcType=VARCHAR}, #{guaranteeNumber,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR}, 
      #{registerPostalCode,jdbcType=VARCHAR}, #{registerCity,jdbcType=VARCHAR}, #{registerArea,jdbcType=VARCHAR}, 
      #{registerAddress,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, #{contactJobtitle,jdbcType=VARCHAR}, 
      #{contactWorkPhoneAreaCode,jdbcType=VARCHAR}, #{contactWorkPhone,jdbcType=VARCHAR}, 
      #{contactWorkPhoneExtension,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, 
      #{faxAreaCode,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{contactCity,jdbcType=VARCHAR}, #{contactArea,jdbcType=VARCHAR}, #{contactAddress,jdbcType=VARCHAR}, 
      #{multipleCompany,jdbcType=CHAR}, #{workersEmployment,jdbcType=CHAR}, #{relatives,jdbcType=CHAR}, 
      #{relatedAmounts,jdbcType=CHAR}, #{notMandatory,jdbcType=CHAR}, #{industry,jdbcType=CHAR}, 
      #{attachDocumentsApply,jdbcType=CHAR}, #{attachDocumentsPlan,jdbcType=CHAR}, #{attachDocumentsRegisterProof,jdbcType=CHAR}, 
      #{attachDocumentsInsureProof,jdbcType=CHAR}, #{oldEmploymentPercentage,jdbcType=CHAR}, 
      #{oldEmploymentNumber,jdbcType=INTEGER}, #{continusOldEmploymentNumber,jdbcType=INTEGER}, 
      #{continusOldEmploymentPercentage,jdbcType=DOUBLE}, #{attachDocumentsSalaryProof,jdbcType=CHAR}, 
      #{attachDocumentsOtherProof,jdbcType=CHAR}, #{attachDocumentsOtherProofDocument,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{acceptUnit,jdbcType=VARCHAR}, #{acceptTime,jdbcType=TIMESTAMP}, 
      #{verifyPerson,jdbcType=VARCHAR}, #{businessManager,jdbcType=VARCHAR}, #{updator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.AdvancedAgeApply" >
    insert into advancedAgeApply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seq != null" >
        seq,
      </if>
      <if test="applyYear != null" >
        apply_year,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="guaranteeNumber != null" >
        guarantee_number,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="registerPostalCode != null" >
        register_postal_code,
      </if>
      <if test="registerCity != null" >
        register_city,
      </if>
      <if test="registerArea != null" >
        register_area,
      </if>
      <if test="registerAddress != null" >
        register_address,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactJobtitle != null" >
        contact_jobtitle,
      </if>
      <if test="contactWorkPhoneAreaCode != null" >
        contact_work_phone_area_code,
      </if>
      <if test="contactWorkPhone != null" >
        contact_work_phone,
      </if>
      <if test="contactWorkPhoneExtension != null" >
        contact_work_phone_extension,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="faxAreaCode != null" >
        fax_area_code,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="contactCity != null" >
        contact_city,
      </if>
      <if test="contactArea != null" >
        contact_area,
      </if>
      <if test="contactAddress != null" >
        contact_address,
      </if>
      <if test="multipleCompany != null" >
        multiple_company,
      </if>
      <if test="workersEmployment != null" >
        workers_employment,
      </if>
      <if test="relatives != null" >
        relatives,
      </if>
      <if test="relatedAmounts != null" >
        related_amounts,
      </if>
      <if test="notMandatory != null" >
        not_mandatory,
      </if>
      <if test="industry != null" >
        industry,
      </if>
      <if test="attachDocumentsApply != null" >
        attach_documents_apply,
      </if>
      <if test="attachDocumentsPlan != null" >
        attach_documents_plan,
      </if>
      <if test="attachDocumentsRegisterProof != null" >
        attach_documents_register_proof,
      </if>
      <if test="attachDocumentsInsureProof != null" >
        attach_documents_insure_proof,
      </if>
      <if test="oldEmploymentPercentage != null" >
        old_employment_percentage,
      </if>
      <if test="oldEmploymentNumber != null" >
        old_employment_number,
      </if>
      <if test="continusOldEmploymentNumber != null" >
        continus_old_employment_number,
      </if>
      <if test="continusOldEmploymentPercentage != null" >
        continus_old_employment_percentage,
      </if>
      <if test="attachDocumentsSalaryProof != null" >
        attach_documents_salary_proof,
      </if>
      <if test="attachDocumentsOtherProof != null" >
        attach_documents_other_proof,
      </if>
      <if test="attachDocumentsOtherProofDocument != null" >
        attach_documents_other_proof_document,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="acceptUnit != null" >
        accept_unit,
      </if>
      <if test="acceptTime != null" >
        accept_time,
      </if>
      <if test="verifyPerson != null" >
        verify_person,
      </if>
      <if test="businessManager != null" >
        business_manager,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seq != null" >
        #{seq,jdbcType=VARCHAR},
      </if>
      <if test="applyYear != null" >
        #{applyYear,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeNumber != null" >
        #{guaranteeNumber,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="registerPostalCode != null" >
        #{registerPostalCode,jdbcType=VARCHAR},
      </if>
      <if test="registerCity != null" >
        #{registerCity,jdbcType=VARCHAR},
      </if>
      <if test="registerArea != null" >
        #{registerArea,jdbcType=VARCHAR},
      </if>
      <if test="registerAddress != null" >
        #{registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactJobtitle != null" >
        #{contactJobtitle,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneAreaCode != null" >
        #{contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhone != null" >
        #{contactWorkPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneExtension != null" >
        #{contactWorkPhoneExtension,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="faxAreaCode != null" >
        #{faxAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="contactCity != null" >
        #{contactCity,jdbcType=VARCHAR},
      </if>
      <if test="contactArea != null" >
        #{contactArea,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="multipleCompany != null" >
        #{multipleCompany,jdbcType=CHAR},
      </if>
      <if test="workersEmployment != null" >
        #{workersEmployment,jdbcType=CHAR},
      </if>
      <if test="relatives != null" >
        #{relatives,jdbcType=CHAR},
      </if>
      <if test="relatedAmounts != null" >
        #{relatedAmounts,jdbcType=CHAR},
      </if>
      <if test="notMandatory != null" >
        #{notMandatory,jdbcType=CHAR},
      </if>
      <if test="industry != null" >
        #{industry,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsApply != null" >
        #{attachDocumentsApply,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsPlan != null" >
        #{attachDocumentsPlan,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsRegisterProof != null" >
        #{attachDocumentsRegisterProof,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsInsureProof != null" >
        #{attachDocumentsInsureProof,jdbcType=CHAR},
      </if>
      <if test="oldEmploymentPercentage != null" >
        #{oldEmploymentPercentage,jdbcType=CHAR},
      </if>
      <if test="oldEmploymentNumber != null" >
        #{oldEmploymentNumber,jdbcType=INTEGER},
      </if>
      <if test="continusOldEmploymentNumber != null" >
        #{continusOldEmploymentNumber,jdbcType=INTEGER},
      </if>
      <if test="continusOldEmploymentPercentage != null" >
        #{continusOldEmploymentPercentage,jdbcType=DOUBLE},
      </if>
      <if test="attachDocumentsSalaryProof != null" >
        #{attachDocumentsSalaryProof,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsOtherProof != null" >
        #{attachDocumentsOtherProof,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsOtherProofDocument != null" >
        #{attachDocumentsOtherProofDocument,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptUnit != null" >
        #{acceptUnit,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null" >
        #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyPerson != null" >
        #{verifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="businessManager != null" >
        #{businessManager,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.AdvancedAgeApplyExample" resultType="java.lang.Integer" >
    select count(*) from advancedAgeApply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update advancedAgeApply
    <set >
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=VARCHAR},
      </if>
      <if test="record.applyYear != null" >
        apply_year = #{record.applyYear,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.guaranteeNumber != null" >
        guarantee_number = #{record.guaranteeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.principal != null" >
        principal = #{record.principal,jdbcType=VARCHAR},
      </if>
      <if test="record.registerPostalCode != null" >
        register_postal_code = #{record.registerPostalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.registerCity != null" >
        register_city = #{record.registerCity,jdbcType=VARCHAR},
      </if>
      <if test="record.registerArea != null" >
        register_area = #{record.registerArea,jdbcType=VARCHAR},
      </if>
      <if test="record.registerAddress != null" >
        register_address = #{record.registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactJobtitle != null" >
        contact_jobtitle = #{record.contactJobtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.contactWorkPhoneAreaCode != null" >
        contact_work_phone_area_code = #{record.contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contactWorkPhone != null" >
        contact_work_phone = #{record.contactWorkPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.contactWorkPhoneExtension != null" >
        contact_work_phone_extension = #{record.contactWorkPhoneExtension,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.faxAreaCode != null" >
        fax_area_code = #{record.faxAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.contactCity != null" >
        contact_city = #{record.contactCity,jdbcType=VARCHAR},
      </if>
      <if test="record.contactArea != null" >
        contact_area = #{record.contactArea,jdbcType=VARCHAR},
      </if>
      <if test="record.contactAddress != null" >
        contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.multipleCompany != null" >
        multiple_company = #{record.multipleCompany,jdbcType=CHAR},
      </if>
      <if test="record.workersEmployment != null" >
        workers_employment = #{record.workersEmployment,jdbcType=CHAR},
      </if>
      <if test="record.relatives != null" >
        relatives = #{record.relatives,jdbcType=CHAR},
      </if>
      <if test="record.relatedAmounts != null" >
        related_amounts = #{record.relatedAmounts,jdbcType=CHAR},
      </if>
      <if test="record.notMandatory != null" >
        not_mandatory = #{record.notMandatory,jdbcType=CHAR},
      </if>
      <if test="record.industry != null" >
        industry = #{record.industry,jdbcType=CHAR},
      </if>
      <if test="record.attachDocumentsApply != null" >
        attach_documents_apply = #{record.attachDocumentsApply,jdbcType=CHAR},
      </if>
      <if test="record.attachDocumentsPlan != null" >
        attach_documents_plan = #{record.attachDocumentsPlan,jdbcType=CHAR},
      </if>
      <if test="record.attachDocumentsRegisterProof != null" >
        attach_documents_register_proof = #{record.attachDocumentsRegisterProof,jdbcType=CHAR},
      </if>
      <if test="record.attachDocumentsInsureProof != null" >
        attach_documents_insure_proof = #{record.attachDocumentsInsureProof,jdbcType=CHAR},
      </if>
      <if test="record.oldEmploymentPercentage != null" >
        old_employment_percentage = #{record.oldEmploymentPercentage,jdbcType=CHAR},
      </if>
      <if test="record.oldEmploymentNumber != null" >
        old_employment_number = #{record.oldEmploymentNumber,jdbcType=INTEGER},
      </if>
      <if test="record.continusOldEmploymentNumber != null" >
        continus_old_employment_number = #{record.continusOldEmploymentNumber,jdbcType=INTEGER},
      </if>
      <if test="record.continusOldEmploymentPercentage != null" >
        continus_old_employment_percentage = #{record.continusOldEmploymentPercentage,jdbcType=DOUBLE},
      </if>
      <if test="record.attachDocumentsSalaryProof != null" >
        attach_documents_salary_proof = #{record.attachDocumentsSalaryProof,jdbcType=CHAR},
      </if>
      <if test="record.attachDocumentsOtherProof != null" >
        attach_documents_other_proof = #{record.attachDocumentsOtherProof,jdbcType=CHAR},
      </if>
      <if test="record.attachDocumentsOtherProofDocument != null" >
        attach_documents_other_proof_document = #{record.attachDocumentsOtherProofDocument,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.acceptUnit != null" >
        accept_unit = #{record.acceptUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptTime != null" >
        accept_time = #{record.acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verifyPerson != null" >
        verify_person = #{record.verifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.businessManager != null" >
        business_manager = #{record.businessManager,jdbcType=VARCHAR},
      </if>
      <if test="record.updator != null" >
        updator = #{record.updator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update advancedAgeApply
    set seq = #{record.seq,jdbcType=VARCHAR},
      apply_year = #{record.applyYear,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      guarantee_number = #{record.guaranteeNumber,jdbcType=VARCHAR},
      principal = #{record.principal,jdbcType=VARCHAR},
      register_postal_code = #{record.registerPostalCode,jdbcType=VARCHAR},
      register_city = #{record.registerCity,jdbcType=VARCHAR},
      register_area = #{record.registerArea,jdbcType=VARCHAR},
      register_address = #{record.registerAddress,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_jobtitle = #{record.contactJobtitle,jdbcType=VARCHAR},
      contact_work_phone_area_code = #{record.contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      contact_work_phone = #{record.contactWorkPhone,jdbcType=VARCHAR},
      contact_work_phone_extension = #{record.contactWorkPhoneExtension,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      fax_area_code = #{record.faxAreaCode,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      contact_city = #{record.contactCity,jdbcType=VARCHAR},
      contact_area = #{record.contactArea,jdbcType=VARCHAR},
      contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      multiple_company = #{record.multipleCompany,jdbcType=CHAR},
      workers_employment = #{record.workersEmployment,jdbcType=CHAR},
      relatives = #{record.relatives,jdbcType=CHAR},
      related_amounts = #{record.relatedAmounts,jdbcType=CHAR},
      not_mandatory = #{record.notMandatory,jdbcType=CHAR},
      industry = #{record.industry,jdbcType=CHAR},
      attach_documents_apply = #{record.attachDocumentsApply,jdbcType=CHAR},
      attach_documents_plan = #{record.attachDocumentsPlan,jdbcType=CHAR},
      attach_documents_register_proof = #{record.attachDocumentsRegisterProof,jdbcType=CHAR},
      attach_documents_insure_proof = #{record.attachDocumentsInsureProof,jdbcType=CHAR},
      old_employment_percentage = #{record.oldEmploymentPercentage,jdbcType=CHAR},
      old_employment_number = #{record.oldEmploymentNumber,jdbcType=INTEGER},
      continus_old_employment_number = #{record.continusOldEmploymentNumber,jdbcType=INTEGER},
      continus_old_employment_percentage = #{record.continusOldEmploymentPercentage,jdbcType=DOUBLE},
      attach_documents_salary_proof = #{record.attachDocumentsSalaryProof,jdbcType=CHAR},
      attach_documents_other_proof = #{record.attachDocumentsOtherProof,jdbcType=CHAR},
      attach_documents_other_proof_document = #{record.attachDocumentsOtherProofDocument,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      accept_unit = #{record.acceptUnit,jdbcType=VARCHAR},
      accept_time = #{record.acceptTime,jdbcType=TIMESTAMP},
      verify_person = #{record.verifyPerson,jdbcType=VARCHAR},
      business_manager = #{record.businessManager,jdbcType=VARCHAR},
      updator = #{record.updator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.AdvancedAgeApply" >
    update advancedAgeApply
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeNumber != null" >
        guarantee_number = #{guaranteeNumber,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="registerPostalCode != null" >
        register_postal_code = #{registerPostalCode,jdbcType=VARCHAR},
      </if>
      <if test="registerCity != null" >
        register_city = #{registerCity,jdbcType=VARCHAR},
      </if>
      <if test="registerArea != null" >
        register_area = #{registerArea,jdbcType=VARCHAR},
      </if>
      <if test="registerAddress != null" >
        register_address = #{registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactJobtitle != null" >
        contact_jobtitle = #{contactJobtitle,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneAreaCode != null" >
        contact_work_phone_area_code = #{contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhone != null" >
        contact_work_phone = #{contactWorkPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneExtension != null" >
        contact_work_phone_extension = #{contactWorkPhoneExtension,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="faxAreaCode != null" >
        fax_area_code = #{faxAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="contactCity != null" >
        contact_city = #{contactCity,jdbcType=VARCHAR},
      </if>
      <if test="contactArea != null" >
        contact_area = #{contactArea,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        contact_address = #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="multipleCompany != null" >
        multiple_company = #{multipleCompany,jdbcType=CHAR},
      </if>
      <if test="workersEmployment != null" >
        workers_employment = #{workersEmployment,jdbcType=CHAR},
      </if>
      <if test="relatives != null" >
        relatives = #{relatives,jdbcType=CHAR},
      </if>
      <if test="relatedAmounts != null" >
        related_amounts = #{relatedAmounts,jdbcType=CHAR},
      </if>
      <if test="notMandatory != null" >
        not_mandatory = #{notMandatory,jdbcType=CHAR},
      </if>
      <if test="industry != null" >
        industry = #{industry,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsApply != null" >
        attach_documents_apply = #{attachDocumentsApply,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsPlan != null" >
        attach_documents_plan = #{attachDocumentsPlan,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsRegisterProof != null" >
        attach_documents_register_proof = #{attachDocumentsRegisterProof,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsInsureProof != null" >
        attach_documents_insure_proof = #{attachDocumentsInsureProof,jdbcType=CHAR},
      </if>
      <if test="oldEmploymentPercentage != null" >
        old_employment_percentage = #{oldEmploymentPercentage,jdbcType=CHAR},
      </if>
      <if test="oldEmploymentNumber != null" >
        old_employment_number = #{oldEmploymentNumber,jdbcType=INTEGER},
      </if>
      <if test="continusOldEmploymentNumber != null" >
        continus_old_employment_number = #{continusOldEmploymentNumber,jdbcType=INTEGER},
      </if>
      <if test="continusOldEmploymentPercentage != null" >
        continus_old_employment_percentage = #{continusOldEmploymentPercentage,jdbcType=DOUBLE},
      </if>
      <if test="attachDocumentsSalaryProof != null" >
        attach_documents_salary_proof = #{attachDocumentsSalaryProof,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsOtherProof != null" >
        attach_documents_other_proof = #{attachDocumentsOtherProof,jdbcType=CHAR},
      </if>
      <if test="attachDocumentsOtherProofDocument != null" >
        attach_documents_other_proof_document = #{attachDocumentsOtherProofDocument,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptUnit != null" >
        accept_unit = #{acceptUnit,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null" >
        accept_time = #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyPerson != null" >
        verify_person = #{verifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="businessManager != null" >
        business_manager = #{businessManager,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where seq = #{seq,jdbcType=VARCHAR}
      and apply_year = #{applyYear,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.AdvancedAgeApply" >
    update advancedAgeApply
    set id = #{id,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      guarantee_number = #{guaranteeNumber,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      register_postal_code = #{registerPostalCode,jdbcType=VARCHAR},
      register_city = #{registerCity,jdbcType=VARCHAR},
      register_area = #{registerArea,jdbcType=VARCHAR},
      register_address = #{registerAddress,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_jobtitle = #{contactJobtitle,jdbcType=VARCHAR},
      contact_work_phone_area_code = #{contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      contact_work_phone = #{contactWorkPhone,jdbcType=VARCHAR},
      contact_work_phone_extension = #{contactWorkPhoneExtension,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      fax_area_code = #{faxAreaCode,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      contact_city = #{contactCity,jdbcType=VARCHAR},
      contact_area = #{contactArea,jdbcType=VARCHAR},
      contact_address = #{contactAddress,jdbcType=VARCHAR},
      multiple_company = #{multipleCompany,jdbcType=CHAR},
      workers_employment = #{workersEmployment,jdbcType=CHAR},
      relatives = #{relatives,jdbcType=CHAR},
      related_amounts = #{relatedAmounts,jdbcType=CHAR},
      not_mandatory = #{notMandatory,jdbcType=CHAR},
      industry = #{industry,jdbcType=CHAR},
      attach_documents_apply = #{attachDocumentsApply,jdbcType=CHAR},
      attach_documents_plan = #{attachDocumentsPlan,jdbcType=CHAR},
      attach_documents_register_proof = #{attachDocumentsRegisterProof,jdbcType=CHAR},
      attach_documents_insure_proof = #{attachDocumentsInsureProof,jdbcType=CHAR},
      old_employment_percentage = #{oldEmploymentPercentage,jdbcType=CHAR},
      old_employment_number = #{oldEmploymentNumber,jdbcType=INTEGER},
      continus_old_employment_number = #{continusOldEmploymentNumber,jdbcType=INTEGER},
      continus_old_employment_percentage = #{continusOldEmploymentPercentage,jdbcType=DOUBLE},
      attach_documents_salary_proof = #{attachDocumentsSalaryProof,jdbcType=CHAR},
      attach_documents_other_proof = #{attachDocumentsOtherProof,jdbcType=CHAR},
      attach_documents_other_proof_document = #{attachDocumentsOtherProofDocument,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      accept_unit = #{acceptUnit,jdbcType=VARCHAR},
      accept_time = #{acceptTime,jdbcType=TIMESTAMP},
      verify_person = #{verifyPerson,jdbcType=VARCHAR},
      business_manager = #{businessManager,jdbcType=VARCHAR},
      updator = #{updator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where seq = #{seq,jdbcType=VARCHAR}
      and apply_year = #{applyYear,jdbcType=VARCHAR}
  </update>
</mapper>
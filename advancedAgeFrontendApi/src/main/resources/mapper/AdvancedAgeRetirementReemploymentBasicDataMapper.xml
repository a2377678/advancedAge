<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.AdvancedAgeRetirementReemploymentBasicDataMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicData" >
    <id column="seq" property="seq" jdbcType="VARCHAR" />
    <id column="advanced_age_retirement_reemployment_apply_id" property="advancedAgeRetirementReemploymentApplyId" jdbcType="INTEGER" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="guarantee_number" property="guaranteeNumber" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_work_phone_area_code" property="contactWorkPhoneAreaCode" jdbcType="VARCHAR" />
    <result column="contact_work_phone" property="contactWorkPhone" jdbcType="VARCHAR" />
    <result column="contact_work_phone_extension" property="contactWorkPhoneExtension" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="business_item" property="businessItem" jdbcType="VARCHAR" />
    <result column="industry" property="industry" jdbcType="CHAR" />
    <result column="unit_size" property="unitSize" jdbcType="VARCHAR" />
    <result column="employee_number" property="employeeNumber" jdbcType="INTEGER" />
    <result column="participate_number" property="participateNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    seq, advanced_age_retirement_reemployment_apply_id, id, company_name, guarantee_number, 
    principal, contact_name, contact_work_phone_area_code, contact_work_phone, contact_work_phone_extension, 
    contact_phone, email, business_item, industry, unit_size, employee_number, participate_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advancedAgeRetirementReemploymentBasicData
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicDataKey" >
    select 
    <include refid="Base_Column_List" />
    from advancedAgeRetirementReemploymentBasicData
    where seq = #{seq,jdbcType=VARCHAR}
      and advanced_age_retirement_reemployment_apply_id = #{advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicDataKey" >
    delete from advancedAgeRetirementReemploymentBasicData
    where seq = #{seq,jdbcType=VARCHAR}
      and advanced_age_retirement_reemployment_apply_id = #{advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicDataExample" >
    delete from advancedAgeRetirementReemploymentBasicData
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicData" >
    insert into advancedAgeRetirementReemploymentBasicData (seq, advanced_age_retirement_reemployment_apply_id, 
      id, company_name, guarantee_number, 
      principal, contact_name, contact_work_phone_area_code, 
      contact_work_phone, contact_work_phone_extension, 
      contact_phone, email, business_item, 
      industry, unit_size, employee_number, 
      participate_number)
    values (#{seq,jdbcType=VARCHAR}, #{advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER}, 
      #{id,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{guaranteeNumber,jdbcType=VARCHAR}, 
      #{principal,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, #{contactWorkPhoneAreaCode,jdbcType=VARCHAR}, 
      #{contactWorkPhone,jdbcType=VARCHAR}, #{contactWorkPhoneExtension,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{businessItem,jdbcType=VARCHAR}, 
      #{industry,jdbcType=CHAR}, #{unitSize,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=INTEGER}, 
      #{participateNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicData" >
    insert into advancedAgeRetirementReemploymentBasicData
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seq != null" >
        seq,
      </if>
      <if test="advancedAgeRetirementReemploymentApplyId != null" >
        advanced_age_retirement_reemployment_apply_id,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="guaranteeNumber != null" >
        guarantee_number,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactWorkPhoneAreaCode != null" >
        contact_work_phone_area_code,
      </if>
      <if test="contactWorkPhone != null" >
        contact_work_phone,
      </if>
      <if test="contactWorkPhoneExtension != null" >
        contact_work_phone_extension,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="businessItem != null" >
        business_item,
      </if>
      <if test="industry != null" >
        industry,
      </if>
      <if test="unitSize != null" >
        unit_size,
      </if>
      <if test="employeeNumber != null" >
        employee_number,
      </if>
      <if test="participateNumber != null" >
        participate_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seq != null" >
        #{seq,jdbcType=VARCHAR},
      </if>
      <if test="advancedAgeRetirementReemploymentApplyId != null" >
        #{advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeNumber != null" >
        #{guaranteeNumber,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneAreaCode != null" >
        #{contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhone != null" >
        #{contactWorkPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneExtension != null" >
        #{contactWorkPhoneExtension,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="businessItem != null" >
        #{businessItem,jdbcType=VARCHAR},
      </if>
      <if test="industry != null" >
        #{industry,jdbcType=CHAR},
      </if>
      <if test="unitSize != null" >
        #{unitSize,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null" >
        #{employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="participateNumber != null" >
        #{participateNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicDataExample" resultType="java.lang.Integer" >
    select count(*) from advancedAgeRetirementReemploymentBasicData
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update advancedAgeRetirementReemploymentBasicData
    <set >
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=VARCHAR},
      </if>
      <if test="record.advancedAgeRetirementReemploymentApplyId != null" >
        advanced_age_retirement_reemployment_apply_id = #{record.advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.guaranteeNumber != null" >
        guarantee_number = #{record.guaranteeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.principal != null" >
        principal = #{record.principal,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactWorkPhoneAreaCode != null" >
        contact_work_phone_area_code = #{record.contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contactWorkPhone != null" >
        contact_work_phone = #{record.contactWorkPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.contactWorkPhoneExtension != null" >
        contact_work_phone_extension = #{record.contactWorkPhoneExtension,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.businessItem != null" >
        business_item = #{record.businessItem,jdbcType=VARCHAR},
      </if>
      <if test="record.industry != null" >
        industry = #{record.industry,jdbcType=CHAR},
      </if>
      <if test="record.unitSize != null" >
        unit_size = #{record.unitSize,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null" >
        employee_number = #{record.employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.participateNumber != null" >
        participate_number = #{record.participateNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update advancedAgeRetirementReemploymentBasicData
    set seq = #{record.seq,jdbcType=VARCHAR},
      advanced_age_retirement_reemployment_apply_id = #{record.advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      guarantee_number = #{record.guaranteeNumber,jdbcType=VARCHAR},
      principal = #{record.principal,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_work_phone_area_code = #{record.contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      contact_work_phone = #{record.contactWorkPhone,jdbcType=VARCHAR},
      contact_work_phone_extension = #{record.contactWorkPhoneExtension,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      business_item = #{record.businessItem,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=CHAR},
      unit_size = #{record.unitSize,jdbcType=VARCHAR},
      employee_number = #{record.employeeNumber,jdbcType=INTEGER},
      participate_number = #{record.participateNumber,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicData" >
    update advancedAgeRetirementReemploymentBasicData
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeNumber != null" >
        guarantee_number = #{guaranteeNumber,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneAreaCode != null" >
        contact_work_phone_area_code = #{contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhone != null" >
        contact_work_phone = #{contactWorkPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactWorkPhoneExtension != null" >
        contact_work_phone_extension = #{contactWorkPhoneExtension,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="businessItem != null" >
        business_item = #{businessItem,jdbcType=VARCHAR},
      </if>
      <if test="industry != null" >
        industry = #{industry,jdbcType=CHAR},
      </if>
      <if test="unitSize != null" >
        unit_size = #{unitSize,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null" >
        employee_number = #{employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="participateNumber != null" >
        participate_number = #{participateNumber,jdbcType=INTEGER},
      </if>
    </set>
    where seq = #{seq,jdbcType=VARCHAR}
      and advanced_age_retirement_reemployment_apply_id = #{advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentBasicData" >
    update advancedAgeRetirementReemploymentBasicData
    set id = #{id,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      guarantee_number = #{guaranteeNumber,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_work_phone_area_code = #{contactWorkPhoneAreaCode,jdbcType=VARCHAR},
      contact_work_phone = #{contactWorkPhone,jdbcType=VARCHAR},
      contact_work_phone_extension = #{contactWorkPhoneExtension,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      business_item = #{businessItem,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=CHAR},
      unit_size = #{unitSize,jdbcType=VARCHAR},
      employee_number = #{employeeNumber,jdbcType=INTEGER},
      participate_number = #{participateNumber,jdbcType=INTEGER}
    where seq = #{seq,jdbcType=VARCHAR}
      and advanced_age_retirement_reemployment_apply_id = #{advancedAgeRetirementReemploymentApplyId,jdbcType=INTEGER}
  </update>
</mapper>
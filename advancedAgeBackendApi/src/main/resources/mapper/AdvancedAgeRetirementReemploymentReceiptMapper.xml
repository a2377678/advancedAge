<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.AdvancedAgeRetirementReemploymentReceiptMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceipt" >
    <id column="approve_year" property="approveYear" jdbcType="VARCHAR" />
    <id column="seq" property="seq" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="approve_amounts" property="approveAmounts" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="contact_city" property="contactCity" jdbcType="VARCHAR" />
    <result column="contact_area" property="contactArea" jdbcType="VARCHAR" />
    <result column="contact_address" property="contactAddress" jdbcType="VARCHAR" />
    <result column="bank_id" property="bankId" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank_account_name" property="bankAccountName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    approve_year, seq, id, approve_amounts, company_name, applicant, contact_name, contact_phone, 
    contact_city, contact_area, contact_address, bank_id, bank_account, bank_account_name, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceiptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advancedAgeRetirementReemploymentReceipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceiptKey" >
    select 
    <include refid="Base_Column_List" />
    from advancedAgeRetirementReemploymentReceipt
    where approve_year = #{approveYear,jdbcType=VARCHAR}
      and seq = #{seq,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceiptKey" >
    delete from advancedAgeRetirementReemploymentReceipt
    where approve_year = #{approveYear,jdbcType=VARCHAR}
      and seq = #{seq,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceiptExample" >
    delete from advancedAgeRetirementReemploymentReceipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceipt" >
    insert into advancedAgeRetirementReemploymentReceipt (approve_year, seq, id, 
      approve_amounts, company_name, applicant, 
      contact_name, contact_phone, contact_city, 
      contact_area, contact_address, bank_id, 
      bank_account, bank_account_name, create_time
      )
    values (#{approveYear,jdbcType=VARCHAR}, #{seq,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, 
      #{approveAmounts,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{applicant,jdbcType=VARCHAR}, 
      #{contactName,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, #{contactCity,jdbcType=VARCHAR}, 
      #{contactArea,jdbcType=VARCHAR}, #{contactAddress,jdbcType=VARCHAR}, #{bankId,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankAccountName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceipt" >
    insert into advancedAgeRetirementReemploymentReceipt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="approveYear != null" >
        approve_year,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="approveAmounts != null" >
        approve_amounts,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="contactCity != null" >
        contact_city,
      </if>
      <if test="contactArea != null" >
        contact_area,
      </if>
      <if test="contactAddress != null" >
        contact_address,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bankAccountName != null" >
        bank_account_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="approveYear != null" >
        #{approveYear,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="approveAmounts != null" >
        #{approveAmounts,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactCity != null" >
        #{contactCity,jdbcType=VARCHAR},
      </if>
      <if test="contactArea != null" >
        #{contactArea,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankAccountName != null" >
        #{bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceiptExample" resultType="java.lang.Integer" >
    select count(*) from advancedAgeRetirementReemploymentReceipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update advancedAgeRetirementReemploymentReceipt
    <set >
      <if test="record.approveYear != null" >
        approve_year = #{record.approveYear,jdbcType=VARCHAR},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.approveAmounts != null" >
        approve_amounts = #{record.approveAmounts,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.contactCity != null" >
        contact_city = #{record.contactCity,jdbcType=VARCHAR},
      </if>
      <if test="record.contactArea != null" >
        contact_area = #{record.contactArea,jdbcType=VARCHAR},
      </if>
      <if test="record.contactAddress != null" >
        contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccountName != null" >
        bank_account_name = #{record.bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update advancedAgeRetirementReemploymentReceipt
    set approve_year = #{record.approveYear,jdbcType=VARCHAR},
      seq = #{record.seq,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=INTEGER},
      approve_amounts = #{record.approveAmounts,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      contact_city = #{record.contactCity,jdbcType=VARCHAR},
      contact_area = #{record.contactArea,jdbcType=VARCHAR},
      contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      bank_id = #{record.bankId,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_account_name = #{record.bankAccountName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceipt" >
    update advancedAgeRetirementReemploymentReceipt
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="approveAmounts != null" >
        approve_amounts = #{approveAmounts,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactCity != null" >
        contact_city = #{contactCity,jdbcType=VARCHAR},
      </if>
      <if test="contactArea != null" >
        contact_area = #{contactArea,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        contact_address = #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankAccountName != null" >
        bank_account_name = #{bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where approve_year = #{approveYear,jdbcType=VARCHAR}
      and seq = #{seq,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.AdvancedAgeRetirementReemploymentReceipt" >
    update advancedAgeRetirementReemploymentReceipt
    set id = #{id,jdbcType=INTEGER},
      approve_amounts = #{approveAmounts,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      applicant = #{applicant,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      contact_city = #{contactCity,jdbcType=VARCHAR},
      contact_area = #{contactArea,jdbcType=VARCHAR},
      contact_address = #{contactAddress,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_account_name = #{bankAccountName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where approve_year = #{approveYear,jdbcType=VARCHAR}
      and seq = #{seq,jdbcType=VARCHAR}
  </update>
</mapper>
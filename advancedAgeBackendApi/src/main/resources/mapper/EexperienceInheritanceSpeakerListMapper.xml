<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.EexperienceInheritanceSpeakerListMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.EexperienceInheritanceSpeakerList" >
    <id column="identification" property="identification" jdbcType="VARCHAR" />
    <id column="retirement_advanced_age_experience_inheritance_plan_id" property="retirementAdvancedAgeExperienceInheritancePlanId" jdbcType="INTEGER" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="labor_protection_time" property="laborProtectionTime" jdbcType="VARCHAR" />
    <result column="occupational_accident_protection_time" property="occupationalAccidentProtectionTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    identification, retirement_advanced_age_experience_inheritance_plan_id, id, employee_id, 
    name, birthday, labor_protection_time, occupational_accident_protection_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experienceInheritanceSpeakerList
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerListKey" >
    select 
    <include refid="Base_Column_List" />
    from experienceInheritanceSpeakerList
    where identification = #{identification,jdbcType=VARCHAR}
      and retirement_advanced_age_experience_inheritance_plan_id = #{retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerListKey" >
    delete from experienceInheritanceSpeakerList
    where identification = #{identification,jdbcType=VARCHAR}
      and retirement_advanced_age_experience_inheritance_plan_id = #{retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerListExample" >
    delete from experienceInheritanceSpeakerList
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerList" >
    insert into experienceInheritanceSpeakerList (identification, retirement_advanced_age_experience_inheritance_plan_id, 
      id, employee_id, name, 
      birthday, labor_protection_time, occupational_accident_protection_time
      )
    values (#{identification,jdbcType=VARCHAR}, #{retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER}, 
      #{id,jdbcType=INTEGER}, #{employeeId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{laborProtectionTime,jdbcType=VARCHAR}, #{occupationalAccidentProtectionTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerList" >
    insert into experienceInheritanceSpeakerList
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="identification != null" >
        identification,
      </if>
      <if test="retirementAdvancedAgeExperienceInheritancePlanId != null" >
        retirement_advanced_age_experience_inheritance_plan_id,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="laborProtectionTime != null" >
        labor_protection_time,
      </if>
      <if test="occupationalAccidentProtectionTime != null" >
        occupational_accident_protection_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="identification != null" >
        #{identification,jdbcType=VARCHAR},
      </if>
      <if test="retirementAdvancedAgeExperienceInheritancePlanId != null" >
        #{retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="laborProtectionTime != null" >
        #{laborProtectionTime,jdbcType=VARCHAR},
      </if>
      <if test="occupationalAccidentProtectionTime != null" >
        #{occupationalAccidentProtectionTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerListExample" resultType="java.lang.Integer" >
    select count(*) from experienceInheritanceSpeakerList
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update experienceInheritanceSpeakerList
    <set >
      <if test="record.identification != null" >
        identification = #{record.identification,jdbcType=VARCHAR},
      </if>
      <if test="record.retirementAdvancedAgeExperienceInheritancePlanId != null" >
        retirement_advanced_age_experience_inheritance_plan_id = #{record.retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.laborProtectionTime != null" >
        labor_protection_time = #{record.laborProtectionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.occupationalAccidentProtectionTime != null" >
        occupational_accident_protection_time = #{record.occupationalAccidentProtectionTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update experienceInheritanceSpeakerList
    set identification = #{record.identification,jdbcType=VARCHAR},
      retirement_advanced_age_experience_inheritance_plan_id = #{record.retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      labor_protection_time = #{record.laborProtectionTime,jdbcType=VARCHAR},
      occupational_accident_protection_time = #{record.occupationalAccidentProtectionTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerList" >
    update experienceInheritanceSpeakerList
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="laborProtectionTime != null" >
        labor_protection_time = #{laborProtectionTime,jdbcType=VARCHAR},
      </if>
      <if test="occupationalAccidentProtectionTime != null" >
        occupational_accident_protection_time = #{occupationalAccidentProtectionTime,jdbcType=VARCHAR},
      </if>
    </set>
    where identification = #{identification,jdbcType=VARCHAR}
      and retirement_advanced_age_experience_inheritance_plan_id = #{retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.EexperienceInheritanceSpeakerList" >
    update experienceInheritanceSpeakerList
    set id = #{id,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      labor_protection_time = #{laborProtectionTime,jdbcType=VARCHAR},
      occupational_accident_protection_time = #{occupationalAccidentProtectionTime,jdbcType=VARCHAR}
    where identification = #{identification,jdbcType=VARCHAR}
      and retirement_advanced_age_experience_inheritance_plan_id = #{retirementAdvancedAgeExperienceInheritancePlanId,jdbcType=INTEGER}
  </update>
</mapper>
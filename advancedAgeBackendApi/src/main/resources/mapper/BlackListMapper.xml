<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.BlackListMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.BlackList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="official_document_number" property="officialDocumentNumber" jdbcType="VARCHAR" />
    <result column="ban_start_date" property="banStartDate" jdbcType="VARCHAR" />
    <result column="ban_end_date" property="banEndDate" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seq, company_name, unit, official_document_number, ban_start_date, ban_end_date, 
    description, creator, updator, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.BlackListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blackList
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blackList
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blackList
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.BlackListExample" >
    delete from blackList
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.BlackList" >
    insert into blackList (id, seq, company_name, 
      unit, official_document_number, ban_start_date, 
      ban_end_date, description, creator, 
      updator, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{seq,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{officialDocumentNumber,jdbcType=VARCHAR}, #{banStartDate,jdbcType=VARCHAR}, 
      #{banEndDate,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{updator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.BlackList" useGeneratedKeys="true" keyProperty="id">
    insert into blackList
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="officialDocumentNumber != null" >
        official_document_number,
      </if>
      <if test="banStartDate != null" >
        ban_start_date,
      </if>
      <if test="banEndDate != null" >
        ban_end_date,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="officialDocumentNumber != null" >
        #{officialDocumentNumber,jdbcType=VARCHAR},
      </if>
      <if test="banStartDate != null" >
        #{banStartDate,jdbcType=VARCHAR},
      </if>
      <if test="banEndDate != null" >
        #{banEndDate,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.BlackListExample" resultType="java.lang.Integer" >
    select count(*) from blackList
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blackList
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.officialDocumentNumber != null" >
        official_document_number = #{record.officialDocumentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.banStartDate != null" >
        ban_start_date = #{record.banStartDate,jdbcType=VARCHAR},
      </if>
      <if test="record.banEndDate != null" >
        ban_end_date = #{record.banEndDate,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.updator != null" >
        updator = #{record.updator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blackList
    set id = #{record.id,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      official_document_number = #{record.officialDocumentNumber,jdbcType=VARCHAR},
      ban_start_date = #{record.banStartDate,jdbcType=VARCHAR},
      ban_end_date = #{record.banEndDate,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      updator = #{record.updator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.BlackList" >
    update blackList
    <set >
      <if test="seq != null" >
        seq = #{seq,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="officialDocumentNumber != null" >
        official_document_number = #{officialDocumentNumber,jdbcType=VARCHAR},
      </if>
      <if test="banStartDate != null" >
        ban_start_date = #{banStartDate,jdbcType=VARCHAR},
      </if>
      <if test="banEndDate != null" >
        ban_end_date = #{banEndDate,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.BlackList" >
    update blackList
    set seq = #{seq,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      official_document_number = #{officialDocumentNumber,jdbcType=VARCHAR},
      ban_start_date = #{banStartDate,jdbcType=VARCHAR},
      ban_end_date = #{banEndDate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      updator = #{updator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>